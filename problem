def pushInRange(a, s, e):
	op = []
	for i in range(s, e):
		op.append(a[i])
	return op


def morganAndString(a, b):
	a = list(map(ord, str(a)))
	b = list(map(ord, str(b)))
	na = len(a)
	nb = len(b)
	ia = ib = connected = 0
	op = []
	while ia < na and ib < nb:
		if a[ia] < b[ib]:
			op.append(a[ia])
			ia += 1
		elif a[ia] > b[ib]:
			op.append(b[ib])
			ib += 1
		else:
			connected = 0
			t = 1
			while a[ia + t] == b[ib + t]:
				if a[ia + t] < a[ia]:
				  connected += 1
				t += 1
				if ia + t == na:
					t -= 1
					op += pushInRange(a, ia, (ia + connected))
					ia += connected
					break
				if ib + t == nb:
					t -= 1
					op += pushInRange(b, ib, (ib + connected))
					ib += connected
					break
			print(ia, t, na)
			print(ib, t, nb)
			if a[ia + t] < b[ib + t]:
				op += pushInRange(a, ia, (ia + connected - 1))
				ia += connected - 1
			else:
				op += pushInRange(b, ib, (ib + connected - 1))
				ib += connected - 1
	if ia == na:
		op += b[ib:]
	if ib == nb:
		op += a[ia:]
	op = list(map(chr, op))
	print(ia, ib)
	return ''.join(op)


# str1 = 'JACK'
# str2 = 'DANIEL'
str1 = 'ABACABA'
str2 = 'ABACABA'

print(morganAndString(str1, str2))

#-------------------------------------------------------
def morganAndString(a, b):
    op = []
    an = len(a)
    bn = len(b)
    ai = 0
    bi = 0
    
    while ai<an and bi < bn:
        if ord(a[ai:ai+1]) < ord(b[bi:bi+1]):
            op.append(a[ai:ai+1])
            ai +=1
        elif ord(a[ai:ai+1]) == ord(b[bi:bi+1]):
            t = 1
            while (ord(a[ai+t:ai+t+1]) == ord(b[bi+t:bi+t+1])):
                if (ai+t == an-1) or (bi+t == bn-1):
                    break
                t += 1
                
            if ai+t == an:
                op.append(a[ai:ai+1])
                ai +=1
            elif bi+t == bn:
                op.append(b[bi:bi+1])
                bi +=1
            else:
                if ord(a[ai+t:ai+t+1]) < ord(b[bi+t:bi+t+1]):
                    op.append(a[ai:ai+1])
                    ai +=1
                else:
                    op.append(b[bi:bi+1])
                    bi +=1
        else:
            op.append(b[bi:bi+1])
            bi +=1
    if ai == an:
        op.append(b[bi:])
    elif bi == bn:
        op.append(a[ai:])
    return ''.join(op)
        
